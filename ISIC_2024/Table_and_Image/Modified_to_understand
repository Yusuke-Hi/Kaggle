{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":63056,"databundleVersionId":9094797,"sourceType":"competition"},{"sourceId":186147615,"sourceType":"kernelVersion"},{"sourceId":187730674,"sourceType":"kernelVersion"},{"sourceId":188543089,"sourceType":"kernelVersion"},{"sourceId":188543756,"sourceType":"kernelVersion"},{"sourceId":188602899,"sourceType":"kernelVersion"},{"sourceId":188603204,"sourceType":"kernelVersion"}],"dockerImageVersionId":30733,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"This notebook adds the output of the image models as new features for tabular model.\n\n- base notebook : https://www.kaggle.com/code/snnclsr/tabular-ensemble-lgbm-catboost\n- image models\n  - efficientnet : https://www.kaggle.com/code/motono0223/isic-pytorch-training-baseline-image-only\n  - eva02 : https://www.kaggle.com/code/motono0223/isic-pytorch-training-baseline-eva02","metadata":{}},{"cell_type":"markdown","source":"# Infer image models as new features","metadata":{}},{"cell_type":"code","source":"!python /kaggle/input/isic-script-inference-effnetv1b0-f313ae/main.py /kaggle/input/isic-pytorch-training-baseline-image-only/AUROC0.5171_Loss0.3476_epoch35.bin\n!mv submission.csv submission_effnetv1b0.csv","metadata":{"execution":{"iopub.status.busy":"2024-07-24T22:40:29.102595Z","iopub.execute_input":"2024-07-24T22:40:29.103330Z","iopub.status.idle":"2024-07-24T22:40:42.705361Z","shell.execute_reply.started":"2024-07-24T22:40:29.103299Z","shell.execute_reply":"2024-07-24T22:40:42.704021Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"BEST_WEIGHT = /kaggle/input/isic-pytorch-training-baseline-image-only/AUROC0.5171_Loss0.3476_epoch35.bin\n100%|█████████████████████████████████████████████| 1/1 [00:00<00:00,  1.05it/s]\n","output_type":"stream"}]},{"cell_type":"code","source":"!python /kaggle/input/isic-script-inference-eva02/main.py /kaggle/input/isic-pytorch-training-baseline-eva02/AUROC0.5177_Loss0.2829_epoch7.bin\n!mv submission.csv submission_eva02.csv","metadata":{"execution":{"iopub.status.busy":"2024-07-24T22:40:42.708131Z","iopub.execute_input":"2024-07-24T22:40:42.709107Z","iopub.status.idle":"2024-07-24T22:40:53.285631Z","shell.execute_reply.started":"2024-07-24T22:40:42.709062Z","shell.execute_reply":"2024-07-24T22:40:53.284281Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"BEST_WEIGHT = /kaggle/input/isic-pytorch-training-baseline-eva02/AUROC0.5177_Loss0.2829_epoch7.bin\n100%|█████████████████████████████████████████████| 1/1 [00:00<00:00,  2.66it/s]\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Imports","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport pandas.api.types\nimport matplotlib.pyplot as plt\n\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.metrics import roc_curve, auc, roc_auc_score\nfrom sklearn.model_selection import GroupKFold, StratifiedGroupKFold\nfrom sklearn.ensemble import VotingClassifier\n\nimport catboost as cb\nimport lightgbm as lgb\nimport xgboost as xgb\nfrom tqdm.auto import tqdm\nimport gc","metadata":{"execution":{"iopub.status.busy":"2024-07-24T22:40:53.287596Z","iopub.execute_input":"2024-07-24T22:40:53.288035Z","iopub.status.idle":"2024-07-24T22:40:58.206101Z","shell.execute_reply.started":"2024-07-24T22:40:53.287993Z","shell.execute_reply":"2024-07-24T22:40:58.205299Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":"# Image features (training data)","metadata":{}},{"cell_type":"markdown","source":"# Feature Engineering","metadata":{}},{"cell_type":"code","source":"df_eff = pd.read_csv(\"/kaggle/input/isic-inference-effnetv1b0-for-training-data/train_effnetv1b0.csv\")\ndisplay(df_eff)\ndf_eff = df_eff[[\"target_effnetv1b0\"]]\ndisplay(df_eff)\ngc.collect()\ndf_eva = pd.read_csv(\"/kaggle/input/isic-inference-eva02-for-training-data/train_eva02.csv\")\ndisplay(df_eva)\ndf_eva = df_eva[[\"target_eva02\"]]\ngc.collect()","metadata":{"execution":{"iopub.status.busy":"2024-07-24T22:40:58.208104Z","iopub.execute_input":"2024-07-24T22:40:58.208692Z","iopub.status.idle":"2024-07-24T22:41:13.669718Z","shell.execute_reply.started":"2024-07-24T22:40:58.208665Z","shell.execute_reply":"2024-07-24T22:41:13.668647Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_34/868657150.py:1: DtypeWarning: Columns (51,52) have mixed types. Specify dtype option on import or set low_memory=False.\n  df_eff = pd.read_csv(\"/kaggle/input/isic-inference-effnetv1b0-for-training-data/train_effnetv1b0.csv\")\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"             isic_id  target  patient_id  age_approx     sex  \\\n0       ISIC_0015670       0  IP_1235828        60.0    male   \n1       ISIC_0015845       0  IP_8170065        60.0    male   \n2       ISIC_0015864       0  IP_6724798        60.0    male   \n3       ISIC_0015902       0  IP_4111386        65.0    male   \n4       ISIC_0024200       0  IP_8313778        55.0    male   \n...              ...     ...         ...         ...     ...   \n401054  ISIC_9999937       0  IP_1140263        70.0    male   \n401055  ISIC_9999951       0  IP_5678181        60.0    male   \n401056  ISIC_9999960       0  IP_0076153        65.0  female   \n401057  ISIC_9999964       0  IP_5231513        30.0  female   \n401058  ISIC_9999967       0  IP_6426047        50.0    male   \n\n       anatom_site_general  clin_size_long_diam_mm          image_type  \\\n0          lower extremity                    3.04  TBP tile: close-up   \n1                head/neck                    1.10  TBP tile: close-up   \n2          posterior torso                    3.40  TBP tile: close-up   \n3           anterior torso                    3.22  TBP tile: close-up   \n4           anterior torso                    2.73  TBP tile: close-up   \n...                    ...                     ...                 ...   \n401054      anterior torso                    6.80  TBP tile: close-up   \n401055     posterior torso                    3.11  TBP tile: close-up   \n401056      anterior torso                    2.05  TBP tile: close-up   \n401057      anterior torso                    2.80  TBP tile: close-up   \n401058     lower extremity                    3.30  TBP tile: close-up   \n\n       tbp_tile_type   tbp_lv_A  ...  iddx_full  iddx_1  iddx_2  iddx_3  \\\n0          3D: white  20.244422  ...     Benign  Benign     NaN     NaN   \n1          3D: white  31.712570  ...     Benign  Benign     NaN     NaN   \n2             3D: XP  22.575830  ...     Benign  Benign     NaN     NaN   \n3             3D: XP  14.242329  ...     Benign  Benign     NaN     NaN   \n4          3D: white  24.725520  ...     Benign  Benign     NaN     NaN   \n...              ...        ...  ...        ...     ...     ...     ...   \n401054        3D: XP  22.574335  ...     Benign  Benign     NaN     NaN   \n401055     3D: white  19.977640  ...     Benign  Benign     NaN     NaN   \n401056        3D: XP  17.332567  ...     Benign  Benign     NaN     NaN   \n401057        3D: XP  22.288570  ...     Benign  Benign     NaN     NaN   \n401058        3D: XP  16.792900  ...     Benign  Benign     NaN     NaN   \n\n        iddx_4  iddx_5  mel_mitotic_index  mel_thick_mm  \\\n0          NaN     NaN                NaN           NaN   \n1          NaN     NaN                NaN           NaN   \n2          NaN     NaN                NaN           NaN   \n3          NaN     NaN                NaN           NaN   \n4          NaN     NaN                NaN           NaN   \n...        ...     ...                ...           ...   \n401054     NaN     NaN                NaN           NaN   \n401055     NaN     NaN                NaN           NaN   \n401056     NaN     NaN                NaN           NaN   \n401057     NaN     NaN                NaN           NaN   \n401058     NaN     NaN                NaN           NaN   \n\n        tbp_lv_dnn_lesion_confidence  target_effnetv1b0  \n0                          97.517282           0.576453  \n1                           3.141455           0.562958  \n2                          99.804040           0.021381  \n3                          99.989998           0.608011  \n4                          70.442510           0.443609  \n...                              ...                ...  \n401054                     99.999988           0.806214  \n401055                     99.999820           0.160842  \n401056                     99.999416           0.125984  \n401057                    100.000000           0.141543  \n401058                     99.999960           0.962205  \n\n[401059 rows x 56 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>isic_id</th>\n      <th>target</th>\n      <th>patient_id</th>\n      <th>age_approx</th>\n      <th>sex</th>\n      <th>anatom_site_general</th>\n      <th>clin_size_long_diam_mm</th>\n      <th>image_type</th>\n      <th>tbp_tile_type</th>\n      <th>tbp_lv_A</th>\n      <th>...</th>\n      <th>iddx_full</th>\n      <th>iddx_1</th>\n      <th>iddx_2</th>\n      <th>iddx_3</th>\n      <th>iddx_4</th>\n      <th>iddx_5</th>\n      <th>mel_mitotic_index</th>\n      <th>mel_thick_mm</th>\n      <th>tbp_lv_dnn_lesion_confidence</th>\n      <th>target_effnetv1b0</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ISIC_0015670</td>\n      <td>0</td>\n      <td>IP_1235828</td>\n      <td>60.0</td>\n      <td>male</td>\n      <td>lower extremity</td>\n      <td>3.04</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: white</td>\n      <td>20.244422</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>97.517282</td>\n      <td>0.576453</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ISIC_0015845</td>\n      <td>0</td>\n      <td>IP_8170065</td>\n      <td>60.0</td>\n      <td>male</td>\n      <td>head/neck</td>\n      <td>1.10</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: white</td>\n      <td>31.712570</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>3.141455</td>\n      <td>0.562958</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ISIC_0015864</td>\n      <td>0</td>\n      <td>IP_6724798</td>\n      <td>60.0</td>\n      <td>male</td>\n      <td>posterior torso</td>\n      <td>3.40</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>22.575830</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>99.804040</td>\n      <td>0.021381</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ISIC_0015902</td>\n      <td>0</td>\n      <td>IP_4111386</td>\n      <td>65.0</td>\n      <td>male</td>\n      <td>anterior torso</td>\n      <td>3.22</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>14.242329</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>99.989998</td>\n      <td>0.608011</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ISIC_0024200</td>\n      <td>0</td>\n      <td>IP_8313778</td>\n      <td>55.0</td>\n      <td>male</td>\n      <td>anterior torso</td>\n      <td>2.73</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: white</td>\n      <td>24.725520</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>70.442510</td>\n      <td>0.443609</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>401054</th>\n      <td>ISIC_9999937</td>\n      <td>0</td>\n      <td>IP_1140263</td>\n      <td>70.0</td>\n      <td>male</td>\n      <td>anterior torso</td>\n      <td>6.80</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>22.574335</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>99.999988</td>\n      <td>0.806214</td>\n    </tr>\n    <tr>\n      <th>401055</th>\n      <td>ISIC_9999951</td>\n      <td>0</td>\n      <td>IP_5678181</td>\n      <td>60.0</td>\n      <td>male</td>\n      <td>posterior torso</td>\n      <td>3.11</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: white</td>\n      <td>19.977640</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>99.999820</td>\n      <td>0.160842</td>\n    </tr>\n    <tr>\n      <th>401056</th>\n      <td>ISIC_9999960</td>\n      <td>0</td>\n      <td>IP_0076153</td>\n      <td>65.0</td>\n      <td>female</td>\n      <td>anterior torso</td>\n      <td>2.05</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>17.332567</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>99.999416</td>\n      <td>0.125984</td>\n    </tr>\n    <tr>\n      <th>401057</th>\n      <td>ISIC_9999964</td>\n      <td>0</td>\n      <td>IP_5231513</td>\n      <td>30.0</td>\n      <td>female</td>\n      <td>anterior torso</td>\n      <td>2.80</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>22.288570</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>100.000000</td>\n      <td>0.141543</td>\n    </tr>\n    <tr>\n      <th>401058</th>\n      <td>ISIC_9999967</td>\n      <td>0</td>\n      <td>IP_6426047</td>\n      <td>50.0</td>\n      <td>male</td>\n      <td>lower extremity</td>\n      <td>3.30</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>16.792900</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>99.999960</td>\n      <td>0.962205</td>\n    </tr>\n  </tbody>\n</table>\n<p>401059 rows × 56 columns</p>\n</div>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"        target_effnetv1b0\n0                0.576453\n1                0.562958\n2                0.021381\n3                0.608011\n4                0.443609\n...                   ...\n401054           0.806214\n401055           0.160842\n401056           0.125984\n401057           0.141543\n401058           0.962205\n\n[401059 rows x 1 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>target_effnetv1b0</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.576453</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.562958</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.021381</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.608011</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.443609</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>401054</th>\n      <td>0.806214</td>\n    </tr>\n    <tr>\n      <th>401055</th>\n      <td>0.160842</td>\n    </tr>\n    <tr>\n      <th>401056</th>\n      <td>0.125984</td>\n    </tr>\n    <tr>\n      <th>401057</th>\n      <td>0.141543</td>\n    </tr>\n    <tr>\n      <th>401058</th>\n      <td>0.962205</td>\n    </tr>\n  </tbody>\n</table>\n<p>401059 rows × 1 columns</p>\n</div>"},"metadata":{}},{"name":"stderr","text":"/tmp/ipykernel_34/868657150.py:6: DtypeWarning: Columns (51,52) have mixed types. Specify dtype option on import or set low_memory=False.\n  df_eva = pd.read_csv(\"/kaggle/input/isic-inference-eva02-for-training-data/train_eva02.csv\")\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"             isic_id  target  patient_id  age_approx     sex  \\\n0       ISIC_0015670       0  IP_1235828        60.0    male   \n1       ISIC_0015845       0  IP_8170065        60.0    male   \n2       ISIC_0015864       0  IP_6724798        60.0    male   \n3       ISIC_0015902       0  IP_4111386        65.0    male   \n4       ISIC_0024200       0  IP_8313778        55.0    male   \n...              ...     ...         ...         ...     ...   \n401054  ISIC_9999937       0  IP_1140263        70.0    male   \n401055  ISIC_9999951       0  IP_5678181        60.0    male   \n401056  ISIC_9999960       0  IP_0076153        65.0  female   \n401057  ISIC_9999964       0  IP_5231513        30.0  female   \n401058  ISIC_9999967       0  IP_6426047        50.0    male   \n\n       anatom_site_general  clin_size_long_diam_mm          image_type  \\\n0          lower extremity                    3.04  TBP tile: close-up   \n1                head/neck                    1.10  TBP tile: close-up   \n2          posterior torso                    3.40  TBP tile: close-up   \n3           anterior torso                    3.22  TBP tile: close-up   \n4           anterior torso                    2.73  TBP tile: close-up   \n...                    ...                     ...                 ...   \n401054      anterior torso                    6.80  TBP tile: close-up   \n401055     posterior torso                    3.11  TBP tile: close-up   \n401056      anterior torso                    2.05  TBP tile: close-up   \n401057      anterior torso                    2.80  TBP tile: close-up   \n401058     lower extremity                    3.30  TBP tile: close-up   \n\n       tbp_tile_type   tbp_lv_A  ...  iddx_full  iddx_1  iddx_2  iddx_3  \\\n0          3D: white  20.244422  ...     Benign  Benign     NaN     NaN   \n1          3D: white  31.712570  ...     Benign  Benign     NaN     NaN   \n2             3D: XP  22.575830  ...     Benign  Benign     NaN     NaN   \n3             3D: XP  14.242329  ...     Benign  Benign     NaN     NaN   \n4          3D: white  24.725520  ...     Benign  Benign     NaN     NaN   \n...              ...        ...  ...        ...     ...     ...     ...   \n401054        3D: XP  22.574335  ...     Benign  Benign     NaN     NaN   \n401055     3D: white  19.977640  ...     Benign  Benign     NaN     NaN   \n401056        3D: XP  17.332567  ...     Benign  Benign     NaN     NaN   \n401057        3D: XP  22.288570  ...     Benign  Benign     NaN     NaN   \n401058        3D: XP  16.792900  ...     Benign  Benign     NaN     NaN   \n\n        iddx_4  iddx_5  mel_mitotic_index  mel_thick_mm  \\\n0          NaN     NaN                NaN           NaN   \n1          NaN     NaN                NaN           NaN   \n2          NaN     NaN                NaN           NaN   \n3          NaN     NaN                NaN           NaN   \n4          NaN     NaN                NaN           NaN   \n...        ...     ...                ...           ...   \n401054     NaN     NaN                NaN           NaN   \n401055     NaN     NaN                NaN           NaN   \n401056     NaN     NaN                NaN           NaN   \n401057     NaN     NaN                NaN           NaN   \n401058     NaN     NaN                NaN           NaN   \n\n        tbp_lv_dnn_lesion_confidence  target_eva02  \n0                          97.517282      0.078152  \n1                           3.141455      0.301592  \n2                          99.804040      0.033913  \n3                          99.989998      0.037954  \n4                          70.442510      0.071067  \n...                              ...           ...  \n401054                     99.999988      0.409281  \n401055                     99.999820      0.079315  \n401056                     99.999416      0.025399  \n401057                    100.000000      0.120297  \n401058                     99.999960      0.027623  \n\n[401059 rows x 56 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>isic_id</th>\n      <th>target</th>\n      <th>patient_id</th>\n      <th>age_approx</th>\n      <th>sex</th>\n      <th>anatom_site_general</th>\n      <th>clin_size_long_diam_mm</th>\n      <th>image_type</th>\n      <th>tbp_tile_type</th>\n      <th>tbp_lv_A</th>\n      <th>...</th>\n      <th>iddx_full</th>\n      <th>iddx_1</th>\n      <th>iddx_2</th>\n      <th>iddx_3</th>\n      <th>iddx_4</th>\n      <th>iddx_5</th>\n      <th>mel_mitotic_index</th>\n      <th>mel_thick_mm</th>\n      <th>tbp_lv_dnn_lesion_confidence</th>\n      <th>target_eva02</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ISIC_0015670</td>\n      <td>0</td>\n      <td>IP_1235828</td>\n      <td>60.0</td>\n      <td>male</td>\n      <td>lower extremity</td>\n      <td>3.04</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: white</td>\n      <td>20.244422</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>97.517282</td>\n      <td>0.078152</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ISIC_0015845</td>\n      <td>0</td>\n      <td>IP_8170065</td>\n      <td>60.0</td>\n      <td>male</td>\n      <td>head/neck</td>\n      <td>1.10</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: white</td>\n      <td>31.712570</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>3.141455</td>\n      <td>0.301592</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ISIC_0015864</td>\n      <td>0</td>\n      <td>IP_6724798</td>\n      <td>60.0</td>\n      <td>male</td>\n      <td>posterior torso</td>\n      <td>3.40</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>22.575830</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>99.804040</td>\n      <td>0.033913</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ISIC_0015902</td>\n      <td>0</td>\n      <td>IP_4111386</td>\n      <td>65.0</td>\n      <td>male</td>\n      <td>anterior torso</td>\n      <td>3.22</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>14.242329</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>99.989998</td>\n      <td>0.037954</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ISIC_0024200</td>\n      <td>0</td>\n      <td>IP_8313778</td>\n      <td>55.0</td>\n      <td>male</td>\n      <td>anterior torso</td>\n      <td>2.73</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: white</td>\n      <td>24.725520</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>70.442510</td>\n      <td>0.071067</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>401054</th>\n      <td>ISIC_9999937</td>\n      <td>0</td>\n      <td>IP_1140263</td>\n      <td>70.0</td>\n      <td>male</td>\n      <td>anterior torso</td>\n      <td>6.80</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>22.574335</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>99.999988</td>\n      <td>0.409281</td>\n    </tr>\n    <tr>\n      <th>401055</th>\n      <td>ISIC_9999951</td>\n      <td>0</td>\n      <td>IP_5678181</td>\n      <td>60.0</td>\n      <td>male</td>\n      <td>posterior torso</td>\n      <td>3.11</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: white</td>\n      <td>19.977640</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>99.999820</td>\n      <td>0.079315</td>\n    </tr>\n    <tr>\n      <th>401056</th>\n      <td>ISIC_9999960</td>\n      <td>0</td>\n      <td>IP_0076153</td>\n      <td>65.0</td>\n      <td>female</td>\n      <td>anterior torso</td>\n      <td>2.05</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>17.332567</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>99.999416</td>\n      <td>0.025399</td>\n    </tr>\n    <tr>\n      <th>401057</th>\n      <td>ISIC_9999964</td>\n      <td>0</td>\n      <td>IP_5231513</td>\n      <td>30.0</td>\n      <td>female</td>\n      <td>anterior torso</td>\n      <td>2.80</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>22.288570</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>100.000000</td>\n      <td>0.120297</td>\n    </tr>\n    <tr>\n      <th>401058</th>\n      <td>ISIC_9999967</td>\n      <td>0</td>\n      <td>IP_6426047</td>\n      <td>50.0</td>\n      <td>male</td>\n      <td>lower extremity</td>\n      <td>3.30</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>16.792900</td>\n      <td>...</td>\n      <td>Benign</td>\n      <td>Benign</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>99.999960</td>\n      <td>0.027623</td>\n    </tr>\n  </tbody>\n</table>\n<p>401059 rows × 56 columns</p>\n</div>"},"metadata":{}},{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}]},{"cell_type":"code","source":"df_train = pd.read_csv(\"/kaggle/input/isic-2024-challenge/train-metadata.csv\")\ndf_test = pd.read_csv(\"/kaggle/input/isic-2024-challenge/test-metadata.csv\")\n\ndef feature_engineering(df):\n    # New features to try...\n    df[\"lesion_size_ratio\"] = df[\"tbp_lv_minorAxisMM\"] / df[\"clin_size_long_diam_mm\"]\n    df[\"lesion_shape_index\"] = df[\"tbp_lv_areaMM2\"] / (df[\"tbp_lv_perimeterMM\"] ** 2)\n    df[\"hue_contrast\"] = (df[\"tbp_lv_H\"] - df[\"tbp_lv_Hext\"]).abs()\n    df[\"luminance_contrast\"] = (df[\"tbp_lv_L\"] - df[\"tbp_lv_Lext\"]).abs()\n    df[\"lesion_color_difference\"] = np.sqrt(df[\"tbp_lv_deltaA\"] ** 2 + df[\"tbp_lv_deltaB\"] ** 2 + df[\"tbp_lv_deltaL\"] ** 2)\n    df[\"border_complexity\"] = df[\"tbp_lv_norm_border\"] + df[\"tbp_lv_symm_2axis\"]\n    df[\"color_uniformity\"] = df[\"tbp_lv_color_std_mean\"] / df[\"tbp_lv_radial_color_std_max\"]\n    df[\"3d_position_distance\"] = np.sqrt(df[\"tbp_lv_x\"] ** 2 + df[\"tbp_lv_y\"] ** 2 + df[\"tbp_lv_z\"] ** 2) \n    df[\"perimeter_to_area_ratio\"] = df[\"tbp_lv_perimeterMM\"] / df[\"tbp_lv_areaMM2\"]\n    df[\"lesion_visibility_score\"] = df[\"tbp_lv_deltaLBnorm\"] + df[\"tbp_lv_norm_color\"]\n    df[\"combined_anatomical_site\"] = df[\"anatom_site_general\"] + \"_\" + df[\"tbp_lv_location\"]\n    df[\"symmetry_border_consistency\"] = df[\"tbp_lv_symm_2axis\"] * df[\"tbp_lv_norm_border\"]\n    df[\"color_consistency\"] = df[\"tbp_lv_stdL\"] / df[\"tbp_lv_Lext\"]\n    \n    df[\"size_age_interaction\"] = df[\"clin_size_long_diam_mm\"] * df[\"age_approx\"]\n    df[\"hue_color_std_interaction\"] = df[\"tbp_lv_H\"] * df[\"tbp_lv_color_std_mean\"]\n    df[\"lesion_severity_index\"] = (df[\"tbp_lv_norm_border\"] + df[\"tbp_lv_norm_color\"] + df[\"tbp_lv_eccentricity\"]) / 3\n    df[\"shape_complexity_index\"] = df[\"border_complexity\"] + df[\"lesion_shape_index\"]\n    df[\"color_contrast_index\"] = df[\"tbp_lv_deltaA\"] + df[\"tbp_lv_deltaB\"] + df[\"tbp_lv_deltaL\"] + df[\"tbp_lv_deltaLBnorm\"]\n    df[\"log_lesion_area\"] = np.log(df[\"tbp_lv_areaMM2\"] + 1)\n    df[\"normalized_lesion_size\"] = df[\"clin_size_long_diam_mm\"] / df[\"age_approx\"]\n    df[\"mean_hue_difference\"] = (df[\"tbp_lv_H\"] + df[\"tbp_lv_Hext\"]) / 2\n    df[\"std_dev_contrast\"] = np.sqrt((df[\"tbp_lv_deltaA\"] ** 2 + df[\"tbp_lv_deltaB\"] ** 2 + df[\"tbp_lv_deltaL\"] ** 2) / 3)\n    df[\"color_shape_composite_index\"] = (df[\"tbp_lv_color_std_mean\"] + df[\"tbp_lv_area_perim_ratio\"] + df[\"tbp_lv_symm_2axis\"]) / 3\n    df[\"3d_lesion_orientation\"] = np.arctan2(df_train[\"tbp_lv_y\"], df_train[\"tbp_lv_x\"])\n    df[\"overall_color_difference\"] = (df[\"tbp_lv_deltaA\"] + df[\"tbp_lv_deltaB\"] + df[\"tbp_lv_deltaL\"]) / 3\n    df[\"symmetry_perimeter_interaction\"] = df[\"tbp_lv_symm_2axis\"] * df[\"tbp_lv_perimeterMM\"]\n    df[\"comprehensive_lesion_index\"] = (df[\"tbp_lv_area_perim_ratio\"] + df[\"tbp_lv_eccentricity\"] + df[\"tbp_lv_norm_color\"] + df[\"tbp_lv_symm_2axis\"]) / 4\n\n    # Taken from: https://www.kaggle.com/code/dschettler8845/isic-detect-skin-cancer-let-s-learn-together\n    df[\"color_variance_ratio\"] = df[\"tbp_lv_color_std_mean\"] / df[\"tbp_lv_stdLExt\"]\n    df[\"border_color_interaction\"] = df[\"tbp_lv_norm_border\"] * df[\"tbp_lv_norm_color\"]\n    df[\"size_color_contrast_ratio\"] = df[\"clin_size_long_diam_mm\"] / df[\"tbp_lv_deltaLBnorm\"]\n    df[\"age_normalized_nevi_confidence\"] = df[\"tbp_lv_nevi_confidence\"] / df[\"age_approx\"]\n    df[\"color_asymmetry_index\"] = df[\"tbp_lv_radial_color_std_max\"] * df[\"tbp_lv_symm_2axis\"]\n    df[\"3d_volume_approximation\"] = df[\"tbp_lv_areaMM2\"] * np.sqrt(df[\"tbp_lv_x\"]**2 + df[\"tbp_lv_y\"]**2 + df[\"tbp_lv_z\"]**2)\n    df[\"color_range\"] = (df[\"tbp_lv_L\"] - df[\"tbp_lv_Lext\"]).abs() + (df[\"tbp_lv_A\"] - df[\"tbp_lv_Aext\"]).abs() + (df[\"tbp_lv_B\"] - df[\"tbp_lv_Bext\"]).abs()\n    df[\"shape_color_consistency\"] = df[\"tbp_lv_eccentricity\"] * df[\"tbp_lv_color_std_mean\"]\n    df[\"border_length_ratio\"] = df[\"tbp_lv_perimeterMM\"] / (2 * np.pi * np.sqrt(df[\"tbp_lv_areaMM2\"] / np.pi))\n    df[\"age_size_symmetry_index\"] = df[\"age_approx\"] * df[\"clin_size_long_diam_mm\"] * df[\"tbp_lv_symm_2axis\"]\n    # Until here.\n    \n    new_num_cols = [\n        \"lesion_size_ratio\", \"lesion_shape_index\", \"hue_contrast\",\n        \"luminance_contrast\", \"lesion_color_difference\", \"border_complexity\",\n        \"color_uniformity\", \"3d_position_distance\", \"perimeter_to_area_ratio\",\n        \"lesion_visibility_score\", \"symmetry_border_consistency\", \"color_consistency\",\n\n        \"size_age_interaction\", \"hue_color_std_interaction\", \"lesion_severity_index\", \n        \"shape_complexity_index\", \"color_contrast_index\", \"log_lesion_area\",\n        \"normalized_lesion_size\", \"mean_hue_difference\", \"std_dev_contrast\",\n        \"color_shape_composite_index\", \"3d_lesion_orientation\", \"overall_color_difference\",\n        \"symmetry_perimeter_interaction\", \"comprehensive_lesion_index\",\n        \n        \"color_variance_ratio\", \"border_color_interaction\", \"size_color_contrast_ratio\",\n        \"age_normalized_nevi_confidence\", \"color_asymmetry_index\", \"3d_volume_approximation\",\n        \"color_range\", \"shape_color_consistency\", \"border_length_ratio\", \"age_size_symmetry_index\",\n    ]\n    new_cat_cols = [\"combined_anatomical_site\"]\n    return df, new_num_cols, new_cat_cols\n\nnum_cols = [\n    'age_approx', 'clin_size_long_diam_mm', 'tbp_lv_A', 'tbp_lv_Aext', 'tbp_lv_B', 'tbp_lv_Bext', \n    'tbp_lv_C', 'tbp_lv_Cext', 'tbp_lv_H', 'tbp_lv_Hext', 'tbp_lv_L', \n    'tbp_lv_Lext', 'tbp_lv_areaMM2', 'tbp_lv_area_perim_ratio', 'tbp_lv_color_std_mean', \n    'tbp_lv_deltaA', 'tbp_lv_deltaB', 'tbp_lv_deltaL', 'tbp_lv_deltaLB',\n    'tbp_lv_deltaLBnorm', 'tbp_lv_eccentricity', 'tbp_lv_minorAxisMM',\n    'tbp_lv_nevi_confidence', 'tbp_lv_norm_border', 'tbp_lv_norm_color',\n    'tbp_lv_perimeterMM', 'tbp_lv_radial_color_std_max', 'tbp_lv_stdL',\n    'tbp_lv_stdLExt', 'tbp_lv_symm_2axis', 'tbp_lv_symm_2axis_angle',\n    'tbp_lv_x', 'tbp_lv_y', 'tbp_lv_z',\n]\ndf_train[num_cols] = df_train[num_cols].fillna(df_train[num_cols].median())\ndf_train, new_num_cols, new_cat_cols = feature_engineering(df_train.copy())\ndf_test, _, _ = feature_engineering(df_test.copy())\nnum_cols += new_num_cols\n# anatom_site_general\ncat_cols = [\"sex\", \"tbp_tile_type\", \"tbp_lv_location\", \"tbp_lv_location_simple\"] + new_cat_cols\ntrain_cols = num_cols + cat_cols\n\ndf_train[\"target_effnetv1b0\"] = df_eff[\"target_effnetv1b0\"]\ndf_train[\"target_eva02\"] = df_eva[\"target_eva02\"]\ntrain_cols += [\"target_effnetv1b0\", \"target_eva02\"]\n\ndel df_eff, df_eva\ngc.collect()\n\ncategory_encoder = OrdinalEncoder(\n    categories='auto',\n    dtype=int,\n    handle_unknown='use_encoded_value',\n    unknown_value=-2,\n    encoded_missing_value=-1,\n)\n\nX_cat = category_encoder.fit_transform(df_train[cat_cols])\nfor c, cat_col in enumerate(cat_cols):\n    df_train[cat_col] = X_cat[:, c]\n","metadata":{"execution":{"iopub.status.busy":"2024-07-24T22:41:13.671528Z","iopub.execute_input":"2024-07-24T22:41:13.671913Z","iopub.status.idle":"2024-07-24T22:41:22.812369Z","shell.execute_reply.started":"2024-07-24T22:41:13.671876Z","shell.execute_reply":"2024-07-24T22:41:22.811335Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_34/1029825964.py:1: DtypeWarning: Columns (51,52) have mixed types. Specify dtype option on import or set low_memory=False.\n  df_train = pd.read_csv(\"/kaggle/input/isic-2024-challenge/train-metadata.csv\")\n","output_type":"stream"}]},{"cell_type":"code","source":"gc.collect()","metadata":{"execution":{"iopub.status.busy":"2024-07-24T22:41:22.813772Z","iopub.execute_input":"2024-07-24T22:41:22.814162Z","iopub.status.idle":"2024-07-24T22:41:22.935438Z","shell.execute_reply.started":"2024-07-24T22:41:22.814129Z","shell.execute_reply":"2024-07-24T22:41:22.934472Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}]},{"cell_type":"code","source":"df_train.shape, df_test.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-24T22:41:22.936929Z","iopub.execute_input":"2024-07-24T22:41:22.937904Z","iopub.status.idle":"2024-07-24T22:41:22.945977Z","shell.execute_reply.started":"2024-07-24T22:41:22.937869Z","shell.execute_reply":"2024-07-24T22:41:22.945013Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"((401059, 94), (3, 81))"},"metadata":{}}]},{"cell_type":"markdown","source":"# CV Setup","metadata":{}},{"cell_type":"code","source":"N_SPLITS = 5\ngkf = GroupKFold(n_splits=N_SPLITS)\n\ndf_train[\"fold\"] = -1\nfor idx, (train_idx, val_idx) in enumerate(gkf.split(df_train, df_train[\"target\"], groups=df_train[\"patient_id\"])):\n    df_train.loc[val_idx, \"fold\"] = idx","metadata":{"execution":{"iopub.status.busy":"2024-07-24T22:54:02.510677Z","iopub.execute_input":"2024-07-24T22:54:02.511141Z","iopub.status.idle":"2024-07-24T22:54:03.248942Z","shell.execute_reply.started":"2024-07-24T22:54:02.511113Z","shell.execute_reply":"2024-07-24T22:54:03.247794Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"markdown","source":"# Competition Metric","metadata":{}},{"cell_type":"code","source":"def comp_score(solution: pd.DataFrame, submission: pd.DataFrame, row_id_column_name: str, min_tpr: float=0.80):\n    v_gt = abs(np.asarray(solution.values)-1)\n    v_pred = np.array([1.0 - x for x in submission.values])\n    max_fpr = abs(1-min_tpr)\n    partial_auc_scaled = roc_auc_score(v_gt, v_pred, max_fpr=max_fpr)\n    # change scale from [0.5, 1.0] to [0.5 * max_fpr**2, max_fpr]\n    # https://math.stackexchange.com/questions/914823/shift-numbers-into-a-different-range\n    partial_auc = 0.5 * max_fpr**2 + (max_fpr - 0.5 * max_fpr**2) / (1.0 - 0.5) * (partial_auc_scaled - 0.5)\n    return partial_auc\n\ndef custom_lgbm_metric(y_true, y_hat):\n    # TODO: Refactor with the above.\n    min_tpr = 0.80\n    v_gt = abs(y_true-1)\n    v_pred = np.array([1.0 - x for x in y_hat])\n    max_fpr = abs(1-min_tpr)\n    partial_auc_scaled = roc_auc_score(v_gt, v_pred, max_fpr=max_fpr)\n    # change scale from [0.5, 1.0] to [0.5 * max_fpr**2, max_fpr]\n    # https://math.stackexchange.com/questions/914823/shift-numbers-into-a-different-range\n    partial_auc = 0.5 * max_fpr**2 + (max_fpr - 0.5 * max_fpr**2) / (1.0 - 0.5) * (partial_auc_scaled - 0.5)\n    return \"pauc80\", partial_auc, True","metadata":{"execution":{"iopub.status.busy":"2024-07-24T22:54:04.182953Z","iopub.execute_input":"2024-07-24T22:54:04.183866Z","iopub.status.idle":"2024-07-24T22:54:04.192996Z","shell.execute_reply.started":"2024-07-24T22:54:04.183832Z","shell.execute_reply":"2024-07-24T22:54:04.191945Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":"# LGBM Model","metadata":{}},{"cell_type":"code","source":"# def objective(trial):\n#     param = {\n#         \"objective\": \"binary\",\n#         # \"metric\": \"custom\",\n#         \"verbosity\": -1,\n#         \"boosting_type\": \"gbdt\",\n#         \"lambda_l1\": trial.suggest_float(\"lambda_l1\", 1e-8, 10.0, log=True),\n#         \"lambda_l2\": trial.suggest_float(\"lambda_l2\", 1e-8, 10.0, log=True),\n#         \"num_leaves\": trial.suggest_int(\"num_leaves\", 2, 256),\n#         \"feature_fraction\": trial.suggest_float(\"feature_fraction\", 0.4, 1.0),\n#         \"bagging_fraction\": trial.suggest_float(\"bagging_fraction\", 0.4, 1.0),\n#         \"bagging_freq\": trial.suggest_int(\"bagging_freq\", 1, 7),\n#         \"min_child_samples\": trial.suggest_int(\"min_child_samples\", 5, 100),\n#         \"device\": \"gpu\"\n#     }\n#     scores = []\n#     for fold in range(N_SPLITS):\n#         _df_train = df_train[df_train[\"fold\"] != fold].reset_index(drop=True)\n#         _df_valid = df_train[df_train[\"fold\"] == fold].reset_index(drop=True)\n#         dtrain = lgb.Dataset(_df_train[train_cols], label=_df_train[\"target\"])\n#         gbm = lgb.train(param, dtrain)\n#         preds = gbm.predict(_df_valid[train_cols])\n#         score = comp_score(_df_valid[[\"target\"]], pd.DataFrame(preds, columns=[\"prediction\"]), \"\")\n#         scores.append(score)\n#     return np.mean(scores)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# import optuna\n# study = optuna.create_study(direction=\"maximize\")\n# study.optimize(objective, n_trials=20)\n\n# print(\"Number of finished trials: {}\".format(len(study.trials)))\n\n# print(\"Best trial:\")\n# trial = study.best_trial\n\n# print(\"  Value: {}\".format(trial.value))\n\n# print(\"  Params: \")\n# for key, value in trial.params.items():\n#     print(\"    {}: {}\".format(key, value))","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# lgb_params = {\n#     'objective': 'binary',\n#     # \"random_state\": 42,\n#     \"n_estimators\": 1500,\n#     'learning_rate': 0.001,\n#     'bagging_freq': 1,\n#     'pos_bagging_fraction': 0.75,\n#     'neg_bagging_fraction': 0.05,\n#     'feature_fraction': 0.6,\n#     'lambda_l1': 0.2,\n#     'lambda_l2': 0.7,\n#     'num_leaves': 35,\n#     \"min_data_in_leaf\": 50,\n#     \"verbosity\": -1,\n#     \"device\": \"gpu\"\n#     # \"extra_trees\": True\n# }\nnew_params =  {\n    \"objective\": \"binary\",\n    \"verbosity\": -1,\n    \"boosting_type\": \"gbdt\",\n    \"n_estimators\": 200,\n    'learning_rate': 0.05,    \n    'lambda_l1': 0.0004681884533249742, \n    'lambda_l2': 8.765240856362274, \n    'num_leaves': 136, \n    'feature_fraction': 0.5392005444882538, \n    'bagging_fraction': 0.9577412548866563, \n    'bagging_freq': 6,\n    'min_child_samples': 60,\n    \"device\": \"gpu\"\n}\nlgb_scores = []\nlgb_models = []\nfor fold in tqdm(range(N_SPLITS)):\n    _df_train = df_train[df_train[\"fold\"] != fold].reset_index(drop=True)\n    _df_valid = df_train[df_train[\"fold\"] == fold].reset_index(drop=True)\n    # model = lgb.LGBMClassifier(**new_params)\n    model = VotingClassifier([(f\"lgb_{i}\", lgb.LGBMClassifier(random_state=i, **new_params)) for i in range(3)], voting=\"soft\")\n    model.fit(_df_train[train_cols], _df_train[\"target\"])\n    preds = model.predict_proba(_df_valid[train_cols])[:, 1]\n    score = comp_score(_df_valid[[\"target\"]], pd.DataFrame(preds, columns=[\"prediction\"]), \"\")\n    print(f\"fold: {fold} - Partial AUC Score: {score:.5f}\")\n    lgb_scores.append(score)\n    lgb_models.append(model)","metadata":{"execution":{"iopub.status.busy":"2024-07-24T23:08:06.898567Z","iopub.execute_input":"2024-07-24T23:08:06.899291Z","iopub.status.idle":"2024-07-24T23:12:01.479992Z","shell.execute_reply.started":"2024-07-24T23:08:06.899256Z","shell.execute_reply":"2024-07-24T23:12:01.479044Z"},"trusted":true},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":"  0%|          | 0/5 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"33f7252c893447f7bde45178efdc305a"}},"metadata":{}},{"name":"stderr","text":"1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n1 warning generated.\n","output_type":"stream"},{"name":"stdout","text":"fold: 0 - Partial AUC Score: 0.18777\nfold: 1 - Partial AUC Score: 0.18418\nfold: 2 - Partial AUC Score: 0.17521\nfold: 3 - Partial AUC Score: 0.18632\nfold: 4 - Partial AUC Score: 0.18278\n","output_type":"stream"}]},{"cell_type":"code","source":"lgb_scores","metadata":{"execution":{"iopub.status.busy":"2024-07-24T23:12:01.481545Z","iopub.execute_input":"2024-07-24T23:12:01.481862Z","iopub.status.idle":"2024-07-24T23:12:01.488160Z","shell.execute_reply.started":"2024-07-24T23:12:01.481834Z","shell.execute_reply":"2024-07-24T23:12:01.487232Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"[0.1877652139184264,\n 0.18417969193205072,\n 0.17521465632912234,\n 0.18632490721096728,\n 0.1827766945555696]"},"metadata":{}}]},{"cell_type":"code","source":"lgbm_score = np.mean(lgb_scores)\nprint(f\"LGBM Score: {lgbm_score:.5f}\")","metadata":{"execution":{"iopub.status.busy":"2024-07-24T23:12:09.576503Z","iopub.execute_input":"2024-07-24T23:12:09.576845Z","iopub.status.idle":"2024-07-24T23:12:09.582314Z","shell.execute_reply.started":"2024-07-24T23:12:09.576820Z","shell.execute_reply":"2024-07-24T23:12:09.581263Z"},"trusted":true},"execution_count":14,"outputs":[{"name":"stdout","text":"LGBM Score: 0.18325\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# LGBM Feature Importances","metadata":{}},{"cell_type":"code","source":"lgb_models[0].estimators_","metadata":{"execution":{"iopub.status.busy":"2024-07-24T23:16:13.820699Z","iopub.execute_input":"2024-07-24T23:16:13.821056Z","iopub.status.idle":"2024-07-24T23:16:13.830024Z","shell.execute_reply.started":"2024-07-24T23:16:13.821028Z","shell.execute_reply":"2024-07-24T23:16:13.829035Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"[LGBMClassifier(bagging_fraction=0.9577412548866563, bagging_freq=6,\n                device='gpu', feature_fraction=0.5392005444882538,\n                lambda_l1=0.0004681884533249742, lambda_l2=8.765240856362274,\n                learning_rate=0.05, min_child_samples=60, n_estimators=200,\n                num_leaves=136, objective='binary', random_state=0,\n                verbosity=-1),\n LGBMClassifier(bagging_fraction=0.9577412548866563, bagging_freq=6,\n                device='gpu', feature_fraction=0.5392005444882538,\n                lambda_l1=0.0004681884533249742, lambda_l2=8.765240856362274,\n                learning_rate=0.05, min_child_samples=60, n_estimators=200,\n                num_leaves=136, objective='binary', random_state=1,\n                verbosity=-1),\n LGBMClassifier(bagging_fraction=0.9577412548866563, bagging_freq=6,\n                device='gpu', feature_fraction=0.5392005444882538,\n                lambda_l1=0.0004681884533249742, lambda_l2=8.765240856362274,\n                learning_rate=0.05, min_child_samples=60, n_estimators=200,\n                num_leaves=136, objective='binary', random_state=2,\n                verbosity=-1)]"},"metadata":{}}]},{"cell_type":"code","source":"importances = np.mean([estimator.feature_importances_ for model in lgb_models for estimator in model.estimators_ ], 0)\ndf_imp = pd.DataFrame({\"feature\": lgb_models[0].estimators_[0].feature_name_, \"importance\": importances}).sort_values(\"importance\").reset_index(drop=True)\ndf_imp.to_csv(\"imp_lgbm.csv\", index=False)\n\nplt.figure(figsize=(16, 12))\nplt.barh(df_imp[\"feature\"], df_imp[\"importance\"])\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-24T23:12:23.468962Z","iopub.execute_input":"2024-07-24T23:12:23.469468Z","iopub.status.idle":"2024-07-24T23:12:24.389371Z","shell.execute_reply.started":"2024-07-24T23:12:23.469434Z","shell.execute_reply":"2024-07-24T23:12:24.388486Z"},"trusted":true},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1600x1200 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# Catboost Model","metadata":{}},{"cell_type":"code","source":"# def objective(trial):\n#     param = {\n#         \"objective\": trial.suggest_categorical(\"objective\", [\"Logloss\", \"CrossEntropy\"]),\n#         \"colsample_bylevel\": trial.suggest_float(\"colsample_bylevel\", 0.01, 0.1),\n#         \"depth\": trial.suggest_int(\"depth\", 1, 12),\n#         \"boosting_type\": trial.suggest_categorical(\"boosting_type\", [\"Ordered\", \"Plain\"]),\n#         \"bootstrap_type\": trial.suggest_categorical(\n#             \"bootstrap_type\", [\"Bayesian\", \"Bernoulli\", \"MVS\"]\n#         ),\n#         # \"task_type\": \"GPU\",\n#         # \"used_ram_limit\": \"3gb\",\n#     }\n#     if param[\"bootstrap_type\"] == \"Bayesian\":\n#         param[\"bagging_temperature\"] = trial.suggest_float(\"bagging_temperature\", 0, 10)\n#     elif param[\"bootstrap_type\"] == \"Bernoulli\":\n#         param[\"subsample\"] = trial.suggest_float(\"subsample\", 0.1, 1)\n\n#     scores = []\n#     for fold in range(N_SPLITS):\n#         _df_train = df_train[df_train[\"fold\"] != fold].reset_index(drop=True)\n#         _df_valid = df_train[df_train[\"fold\"] == fold].reset_index(drop=True)\n#         gbm = cb.CatBoostClassifier(**param)\n#         gbm.fit(_df_train[train_cols], _df_train[\"target\"], eval_set=[(_df_valid[train_cols], _df_valid[\"target\"])], verbose=0, early_stopping_rounds=100)\n#         preds = gbm.predict(_df_valid[train_cols])\n#         score = comp_score(_df_valid[[\"target\"]], pd.DataFrame(preds, columns=[\"prediction\"]), \"\")\n#         scores.append(score)\n#     return np.mean(scores)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# import optuna\n# study = optuna.create_study(direction=\"maximize\")\n# study.optimize(objective, n_trials=20, timeout=600)\n\n# print(\"Number of finished trials: {}\".format(len(study.trials)))\n\n# print(\"Best trial:\")\n# trial = study.best_trial\n\n# print(\"  Value: {}\".format(trial.value))\n\n# print(\"  Params: \")\n# for key, value in trial.params.items():\n#     print(\"    {}: {}\".format(key, value))","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"cb_params = {\n    'objective': 'Logloss',\n    # \"random_state\": 42,\n    \"colsample_bylevel\": 0.3, # 0.01, 0.1\n    \"iterations\": 400,\n    \"learning_rate\": 0.05,\n    \"cat_features\": cat_cols,\n    \"max_depth\": 8,\n    \"l2_leaf_reg\": 5,\n    # \"task_type\": \"GPU\",\n    # \"scale_pos_weight\": 2,\n    \"verbose\": 0,\n}\ncb_scores = []\ncb_models = []\nfor fold in tqdm(range(N_SPLITS)):\n    _df_train = df_train[df_train[\"fold\"] != fold].reset_index(drop=True)\n    _df_valid = df_train[df_train[\"fold\"] == fold].reset_index(drop=True)\n    model = cb.CatBoostClassifier(**cb_params)\n    model = VotingClassifier([(f\"cb_{i}\", cb.CatBoostClassifier(random_state=i, **cb_params)) for i in range(3)], voting=\"soft\")\n    # eval_set=(_df_valid[train_cols], _df_valid[\"target\"]), early_stopping_rounds=50\n    model.fit(_df_train[train_cols], _df_train[\"target\"])\n    preds = model.predict_proba(_df_valid[train_cols])[:, 1]\n    score = comp_score(_df_valid[[\"target\"]], pd.DataFrame(preds, columns=[\"prediction\"]), \"\")\n    print(f\"fold: {fold} - Partial AUC Score: {score:.5f}\")\n    cb_scores.append(score)\n    cb_models.append(model)","metadata":{"execution":{"iopub.status.busy":"2024-07-24T23:39:06.573591Z","iopub.execute_input":"2024-07-24T23:39:06.574008Z","iopub.status.idle":"2024-07-24T23:45:05.819626Z","shell.execute_reply.started":"2024-07-24T23:39:06.573976Z","shell.execute_reply":"2024-07-24T23:45:05.817951Z"},"trusted":true},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":"  0%|          | 0/5 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"acd7ec64a0284dbd9a2332b4361fa9ef"}},"metadata":{}},{"name":"stdout","text":"fold: 0 - Partial AUC Score: 0.18611\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","Cell \u001b[0;32mIn[22], line 22\u001b[0m\n\u001b[1;32m     20\u001b[0m model \u001b[38;5;241m=\u001b[39m VotingClassifier([(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcb_\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mi\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m, cb\u001b[38;5;241m.\u001b[39mCatBoostClassifier(random_state\u001b[38;5;241m=\u001b[39mi, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mcb_params)) \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mrange\u001b[39m(\u001b[38;5;241m3\u001b[39m)], voting\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124msoft\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m     21\u001b[0m \u001b[38;5;66;03m# eval_set=(_df_valid[train_cols], _df_valid[\"target\"]), early_stopping_rounds=50\u001b[39;00m\n\u001b[0;32m---> 22\u001b[0m \u001b[43mmodel\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfit\u001b[49m\u001b[43m(\u001b[49m\u001b[43m_df_train\u001b[49m\u001b[43m[\u001b[49m\u001b[43mtrain_cols\u001b[49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m_df_train\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mtarget\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     23\u001b[0m preds \u001b[38;5;241m=\u001b[39m model\u001b[38;5;241m.\u001b[39mpredict_proba(_df_valid[train_cols])[:, \u001b[38;5;241m1\u001b[39m]\n\u001b[1;32m     24\u001b[0m score \u001b[38;5;241m=\u001b[39m comp_score(_df_valid[[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mtarget\u001b[39m\u001b[38;5;124m\"\u001b[39m]], pd\u001b[38;5;241m.\u001b[39mDataFrame(preds, columns\u001b[38;5;241m=\u001b[39m[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mprediction\u001b[39m\u001b[38;5;124m\"\u001b[39m]), \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_voting.py:346\u001b[0m, in \u001b[0;36mVotingClassifier.fit\u001b[0;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[1;32m    343\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mclasses_ \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mle_\u001b[38;5;241m.\u001b[39mclasses_\n\u001b[1;32m    344\u001b[0m transformed_y \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mle_\u001b[38;5;241m.\u001b[39mtransform(y)\n\u001b[0;32m--> 346\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfit\u001b[49m\u001b[43m(\u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtransformed_y\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msample_weight\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_voting.py:81\u001b[0m, in \u001b[0;36m_BaseVoting.fit\u001b[0;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[1;32m     75\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mweights \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mweights) \u001b[38;5;241m!=\u001b[39m \u001b[38;5;28mlen\u001b[39m(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mestimators):\n\u001b[1;32m     76\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[1;32m     77\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mNumber of `estimators` and weights must be equal; got\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m     78\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m \u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mlen\u001b[39m(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mweights)\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m weights, \u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mlen\u001b[39m(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mestimators)\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m estimators\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m     79\u001b[0m     )\n\u001b[0;32m---> 81\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mestimators_ \u001b[38;5;241m=\u001b[39m \u001b[43mParallel\u001b[49m\u001b[43m(\u001b[49m\u001b[43mn_jobs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mn_jobs\u001b[49m\u001b[43m)\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m     82\u001b[0m \u001b[43m    \u001b[49m\u001b[43mdelayed\u001b[49m\u001b[43m(\u001b[49m\u001b[43m_fit_single_estimator\u001b[49m\u001b[43m)\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m     83\u001b[0m \u001b[43m        \u001b[49m\u001b[43mclone\u001b[49m\u001b[43m(\u001b[49m\u001b[43mclf\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m     84\u001b[0m \u001b[43m        \u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m     85\u001b[0m \u001b[43m        \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m     86\u001b[0m \u001b[43m        \u001b[49m\u001b[43msample_weight\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msample_weight\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m     87\u001b[0m \u001b[43m        \u001b[49m\u001b[43mmessage_clsname\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mVoting\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m     88\u001b[0m \u001b[43m        \u001b[49m\u001b[43mmessage\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_log_message\u001b[49m\u001b[43m(\u001b[49m\u001b[43mnames\u001b[49m\u001b[43m[\u001b[49m\u001b[43midx\u001b[49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43midx\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m+\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;241;43m1\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mlen\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mclfs\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m     89\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     90\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43;01mfor\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43midx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mclf\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01min\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;28;43menumerate\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mclfs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     91\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43;01mif\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mclf\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m!=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mdrop\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\n\u001b[1;32m     92\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     94\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnamed_estimators_ \u001b[38;5;241m=\u001b[39m Bunch()\n\u001b[1;32m     96\u001b[0m \u001b[38;5;66;03m# Uses 'drop' as placeholder for dropped estimators\u001b[39;00m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/sklearn/utils/parallel.py:63\u001b[0m, in \u001b[0;36mParallel.__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m     58\u001b[0m config \u001b[38;5;241m=\u001b[39m get_config()\n\u001b[1;32m     59\u001b[0m iterable_with_config \u001b[38;5;241m=\u001b[39m (\n\u001b[1;32m     60\u001b[0m     (_with_config(delayed_func, config), args, kwargs)\n\u001b[1;32m     61\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m delayed_func, args, kwargs \u001b[38;5;129;01min\u001b[39;00m iterable\n\u001b[1;32m     62\u001b[0m )\n\u001b[0;32m---> 63\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[38;5;21;43m__call__\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43miterable_with_config\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/joblib/parallel.py:1918\u001b[0m, in \u001b[0;36mParallel.__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m   1916\u001b[0m     output \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_get_sequential_output(iterable)\n\u001b[1;32m   1917\u001b[0m     \u001b[38;5;28mnext\u001b[39m(output)\n\u001b[0;32m-> 1918\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m output \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mreturn_generator \u001b[38;5;28;01melse\u001b[39;00m \u001b[38;5;28;43mlist\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43moutput\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1920\u001b[0m \u001b[38;5;66;03m# Let's create an ID that uniquely identifies the current call. If the\u001b[39;00m\n\u001b[1;32m   1921\u001b[0m \u001b[38;5;66;03m# call is interrupted early and that the same instance is immediately\u001b[39;00m\n\u001b[1;32m   1922\u001b[0m \u001b[38;5;66;03m# re-used, this id will be used to prevent workers that were\u001b[39;00m\n\u001b[1;32m   1923\u001b[0m \u001b[38;5;66;03m# concurrently finalizing a task from the previous call to run the\u001b[39;00m\n\u001b[1;32m   1924\u001b[0m \u001b[38;5;66;03m# callback.\u001b[39;00m\n\u001b[1;32m   1925\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_lock:\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/joblib/parallel.py:1847\u001b[0m, in \u001b[0;36mParallel._get_sequential_output\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m   1845\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mn_dispatched_batches \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m\n\u001b[1;32m   1846\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mn_dispatched_tasks \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m\n\u001b[0;32m-> 1847\u001b[0m res \u001b[38;5;241m=\u001b[39m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1848\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mn_completed_tasks \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m\n\u001b[1;32m   1849\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mprint_progress()\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/sklearn/utils/parallel.py:123\u001b[0m, in \u001b[0;36m_FuncWrapper.__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    121\u001b[0m     config \u001b[38;5;241m=\u001b[39m {}\n\u001b[1;32m    122\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m config_context(\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mconfig):\n\u001b[0;32m--> 123\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfunction\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_base.py:46\u001b[0m, in \u001b[0;36m_fit_single_estimator\u001b[0;34m(estimator, X, y, sample_weight, message_clsname, message)\u001b[0m\n\u001b[1;32m     44\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m     45\u001b[0m     \u001b[38;5;28;01mwith\u001b[39;00m _print_elapsed_time(message_clsname, message):\n\u001b[0;32m---> 46\u001b[0m         \u001b[43mestimator\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfit\u001b[49m\u001b[43m(\u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     47\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m estimator\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/catboost/core.py:5220\u001b[0m, in \u001b[0;36mCatBoostClassifier.fit\u001b[0;34m(self, X, y, cat_features, text_features, embedding_features, sample_weight, baseline, use_best_model, eval_set, verbose, logging_level, plot, plot_file, column_description, verbose_eval, metric_period, silent, early_stopping_rounds, save_snapshot, snapshot_file, snapshot_interval, init_model, callbacks, log_cout, log_cerr)\u001b[0m\n\u001b[1;32m   5217\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mloss_function\u001b[39m\u001b[38;5;124m'\u001b[39m \u001b[38;5;129;01min\u001b[39;00m params:\n\u001b[1;32m   5218\u001b[0m     CatBoostClassifier\u001b[38;5;241m.\u001b[39m_check_is_compatible_loss(params[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mloss_function\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[0;32m-> 5220\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_fit\u001b[49m\u001b[43m(\u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcat_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtext_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43membedding_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msample_weight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mbaseline\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43muse_best_model\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   5221\u001b[0m \u001b[43m          \u001b[49m\u001b[43meval_set\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mverbose\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlogging_level\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mplot\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mplot_file\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcolumn_description\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mverbose_eval\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmetric_period\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   5222\u001b[0m \u001b[43m          \u001b[49m\u001b[43msilent\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mearly_stopping_rounds\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msave_snapshot\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msnapshot_file\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msnapshot_interval\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43minit_model\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcallbacks\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlog_cout\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlog_cerr\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   5223\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/catboost/core.py:2400\u001b[0m, in \u001b[0;36mCatBoost._fit\u001b[0;34m(self, X, y, cat_features, text_features, embedding_features, pairs, sample_weight, group_id, group_weight, subgroup_id, pairs_weight, baseline, use_best_model, eval_set, verbose, logging_level, plot, plot_file, column_description, verbose_eval, metric_period, silent, early_stopping_rounds, save_snapshot, snapshot_file, snapshot_interval, init_model, callbacks, log_cout, log_cerr)\u001b[0m\n\u001b[1;32m   2397\u001b[0m allow_clear_pool \u001b[38;5;241m=\u001b[39m train_params[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mallow_clear_pool\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[1;32m   2399\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m plot_wrapper(plot, plot_file, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mTraining plots\u001b[39m\u001b[38;5;124m'\u001b[39m, [_get_train_dir(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mget_params())]):\n\u001b[0;32m-> 2400\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_train\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   2401\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtrain_pool\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2402\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtrain_params\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43meval_sets\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2403\u001b[0m \u001b[43m        \u001b[49m\u001b[43mparams\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2404\u001b[0m \u001b[43m        \u001b[49m\u001b[43mallow_clear_pool\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2405\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtrain_params\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43minit_model\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\n\u001b[1;32m   2406\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   2408\u001b[0m \u001b[38;5;66;03m# Have property feature_importance possibly set\u001b[39;00m\n\u001b[1;32m   2409\u001b[0m loss \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_object\u001b[38;5;241m.\u001b[39m_get_loss_function_name()\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/catboost/core.py:1780\u001b[0m, in \u001b[0;36m_CatBoostBase._train\u001b[0;34m(self, train_pool, test_pool, params, allow_clear_pool, init_model)\u001b[0m\n\u001b[1;32m   1779\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_train\u001b[39m(\u001b[38;5;28mself\u001b[39m, train_pool, test_pool, params, allow_clear_pool, init_model):\n\u001b[0;32m-> 1780\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_object\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_train\u001b[49m\u001b[43m(\u001b[49m\u001b[43mtrain_pool\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtest_pool\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mparams\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mallow_clear_pool\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43minit_model\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_object\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mif\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43minit_model\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01melse\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\n\u001b[1;32m   1781\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_set_trained_model_attributes()\n","File \u001b[0;32m_catboost.pyx:4833\u001b[0m, in \u001b[0;36m_catboost._CatBoost._train\u001b[0;34m()\u001b[0m\n","File \u001b[0;32m_catboost.pyx:4882\u001b[0m, in \u001b[0;36m_catboost._CatBoost._train\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "],"ename":"KeyboardInterrupt","evalue":"","output_type":"error"}]},{"cell_type":"code","source":"cb_score = np.mean(cb_scores)\nprint(f\"CatBoost Score: {cb_score:.5f}\")","metadata":{"execution":{"iopub.status.busy":"2024-07-24T23:45:05.820426Z","iopub.status.idle":"2024-07-24T23:45:05.820790Z","shell.execute_reply.started":"2024-07-24T23:45:05.820614Z","shell.execute_reply":"2024-07-24T23:45:05.820629Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# CatBoost Feature Importances","metadata":{}},{"cell_type":"code","source":"importances = np.mean([estimator.feature_importances_ for model in cb_models for estimator in model.estimators_ ], 0)\ndf_imp = pd.DataFrame({\"feature\": cb_models[0].estimators_[0].feature_names_, \"importance\": importances}).sort_values(\"importance\").reset_index(drop=True)\ndf_imp.to_csv(\"imp_catb.csv\", index=False)\n\nplt.figure(figsize=(16, 12))\nplt.barh(df_imp[\"feature\"], df_imp[\"importance\"])\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-24T23:45:05.821932Z","iopub.status.idle":"2024-07-24T23:45:05.822295Z","shell.execute_reply.started":"2024-07-24T23:45:05.822102Z","shell.execute_reply":"2024-07-24T23:45:05.822116Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Ensembling","metadata":{}},{"cell_type":"code","source":"df_test","metadata":{"execution":{"iopub.status.busy":"2024-07-24T23:45:18.909325Z","iopub.execute_input":"2024-07-24T23:45:18.910165Z","iopub.status.idle":"2024-07-24T23:45:18.936494Z","shell.execute_reply.started":"2024-07-24T23:45:18.910133Z","shell.execute_reply":"2024-07-24T23:45:18.935231Z"},"trusted":true},"execution_count":23,"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"        isic_id  patient_id  age_approx     sex anatom_site_general  \\\n0  ISIC_0015657  IP_6074337        45.0    male     posterior torso   \n1  ISIC_0015729  IP_1664139        35.0  female     lower extremity   \n2  ISIC_0015740  IP_7142616        65.0    male     posterior torso   \n\n   clin_size_long_diam_mm          image_type tbp_tile_type  tbp_lv_A  \\\n0                    2.70  TBP tile: close-up        3D: XP  22.80433   \n1                    2.52  TBP tile: close-up        3D: XP  16.64867   \n2                    3.16  TBP tile: close-up        3D: XP  24.25384   \n\n   tbp_lv_Aext  ...  color_variance_ratio  border_color_interaction  \\\n0    20.007270  ...              0.200505                  6.214656   \n1     9.657964  ...              0.000000                  0.000000   \n2    19.937380  ...              0.092849                  2.864519   \n\n   size_color_contrast_ratio  age_normalized_nevi_confidence  \\\n0                   0.394561                    3.773564e-04   \n1                   0.414243                    6.021040e-03   \n2                   0.580136                    1.238809e-14   \n\n   color_asymmetry_index  3d_volume_approximation  color_range  \\\n0               0.146115              5860.433195    10.272290   \n1               0.000000              1356.386566    19.020889   \n2               0.084468              4439.279492    11.935090   \n\n   shape_color_consistency  border_length_ratio  age_size_symmetry_index  \n0                 0.306417             1.350141                58.239664  \n1                 0.000000             1.228257                37.593443  \n2                 0.224800             1.244559                75.191066  \n\n[3 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>isic_id</th>\n      <th>patient_id</th>\n      <th>age_approx</th>\n      <th>sex</th>\n      <th>anatom_site_general</th>\n      <th>clin_size_long_diam_mm</th>\n      <th>image_type</th>\n      <th>tbp_tile_type</th>\n      <th>tbp_lv_A</th>\n      <th>tbp_lv_Aext</th>\n      <th>...</th>\n      <th>color_variance_ratio</th>\n      <th>border_color_interaction</th>\n      <th>size_color_contrast_ratio</th>\n      <th>age_normalized_nevi_confidence</th>\n      <th>color_asymmetry_index</th>\n      <th>3d_volume_approximation</th>\n      <th>color_range</th>\n      <th>shape_color_consistency</th>\n      <th>border_length_ratio</th>\n      <th>age_size_symmetry_index</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ISIC_0015657</td>\n      <td>IP_6074337</td>\n      <td>45.0</td>\n      <td>male</td>\n      <td>posterior torso</td>\n      <td>2.70</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>22.80433</td>\n      <td>20.007270</td>\n      <td>...</td>\n      <td>0.200505</td>\n      <td>6.214656</td>\n      <td>0.394561</td>\n      <td>3.773564e-04</td>\n      <td>0.146115</td>\n      <td>5860.433195</td>\n      <td>10.272290</td>\n      <td>0.306417</td>\n      <td>1.350141</td>\n      <td>58.239664</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ISIC_0015729</td>\n      <td>IP_1664139</td>\n      <td>35.0</td>\n      <td>female</td>\n      <td>lower extremity</td>\n      <td>2.52</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>16.64867</td>\n      <td>9.657964</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.414243</td>\n      <td>6.021040e-03</td>\n      <td>0.000000</td>\n      <td>1356.386566</td>\n      <td>19.020889</td>\n      <td>0.000000</td>\n      <td>1.228257</td>\n      <td>37.593443</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ISIC_0015740</td>\n      <td>IP_7142616</td>\n      <td>65.0</td>\n      <td>male</td>\n      <td>posterior torso</td>\n      <td>3.16</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>24.25384</td>\n      <td>19.937380</td>\n      <td>...</td>\n      <td>0.092849</td>\n      <td>2.864519</td>\n      <td>0.580136</td>\n      <td>1.238809e-14</td>\n      <td>0.084468</td>\n      <td>4439.279492</td>\n      <td>11.935090</td>\n      <td>0.224800</td>\n      <td>1.244559</td>\n      <td>75.191066</td>\n    </tr>\n  </tbody>\n</table>\n<p>3 rows × 81 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Image features (test data)\ndf_eff = pd.read_csv(\"submission_effnetv1b0.csv\")\ndisplay(df_eff)\ndf_test[\"target_effnetv1b0\"] = df_eff[\"target\"]\ndel df_eff\ngc.collect()\n\ndf_eva = pd.read_csv(\"submission_eva02.csv\")\ndisplay(df_eva)\ndf_test[\"target_eva02\"] = df_eva[\"target\"]\ndel df_eva\ngc.collect()","metadata":{"execution":{"iopub.status.busy":"2024-07-24T23:46:13.826213Z","iopub.execute_input":"2024-07-24T23:46:13.827042Z","iopub.status.idle":"2024-07-24T23:46:14.168070Z","shell.execute_reply.started":"2024-07-24T23:46:13.827009Z","shell.execute_reply":"2024-07-24T23:46:14.167227Z"},"trusted":true},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":"        isic_id    target\n0  ISIC_0015657  0.990183\n1  ISIC_0015729  0.040407\n2  ISIC_0015740  0.058077","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>isic_id</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ISIC_0015657</td>\n      <td>0.990183</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ISIC_0015729</td>\n      <td>0.040407</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ISIC_0015740</td>\n      <td>0.058077</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"        isic_id    target\n0  ISIC_0015657  0.035649\n1  ISIC_0015729  0.036221\n2  ISIC_0015740  0.026196","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>isic_id</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ISIC_0015657</td>\n      <td>0.035649</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ISIC_0015729</td>\n      <td>0.036221</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ISIC_0015740</td>\n      <td>0.026196</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}]},{"cell_type":"code","source":"df_test","metadata":{"execution":{"iopub.status.busy":"2024-07-24T23:45:27.752242Z","iopub.execute_input":"2024-07-24T23:45:27.752947Z","iopub.status.idle":"2024-07-24T23:45:27.780993Z","shell.execute_reply.started":"2024-07-24T23:45:27.752913Z","shell.execute_reply":"2024-07-24T23:45:27.780087Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"        isic_id  patient_id  age_approx     sex anatom_site_general  \\\n0  ISIC_0015657  IP_6074337        45.0    male     posterior torso   \n1  ISIC_0015729  IP_1664139        35.0  female     lower extremity   \n2  ISIC_0015740  IP_7142616        65.0    male     posterior torso   \n\n   clin_size_long_diam_mm          image_type tbp_tile_type  tbp_lv_A  \\\n0                    2.70  TBP tile: close-up        3D: XP  22.80433   \n1                    2.52  TBP tile: close-up        3D: XP  16.64867   \n2                    3.16  TBP tile: close-up        3D: XP  24.25384   \n\n   tbp_lv_Aext  ...  size_color_contrast_ratio  \\\n0    20.007270  ...                   0.394561   \n1     9.657964  ...                   0.414243   \n2    19.937380  ...                   0.580136   \n\n   age_normalized_nevi_confidence  color_asymmetry_index  \\\n0                    3.773564e-04               0.146115   \n1                    6.021040e-03               0.000000   \n2                    1.238809e-14               0.084468   \n\n   3d_volume_approximation  color_range  shape_color_consistency  \\\n0              5860.433195    10.272290                 0.306417   \n1              1356.386566    19.020889                 0.000000   \n2              4439.279492    11.935090                 0.224800   \n\n   border_length_ratio  age_size_symmetry_index  target_effnetv1b0  \\\n0             1.350141                58.239664           0.990183   \n1             1.228257                37.593443           0.040407   \n2             1.244559                75.191066           0.058077   \n\n   target_eva02  \n0      0.035649  \n1      0.036221  \n2      0.026196  \n\n[3 rows x 83 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>isic_id</th>\n      <th>patient_id</th>\n      <th>age_approx</th>\n      <th>sex</th>\n      <th>anatom_site_general</th>\n      <th>clin_size_long_diam_mm</th>\n      <th>image_type</th>\n      <th>tbp_tile_type</th>\n      <th>tbp_lv_A</th>\n      <th>tbp_lv_Aext</th>\n      <th>...</th>\n      <th>size_color_contrast_ratio</th>\n      <th>age_normalized_nevi_confidence</th>\n      <th>color_asymmetry_index</th>\n      <th>3d_volume_approximation</th>\n      <th>color_range</th>\n      <th>shape_color_consistency</th>\n      <th>border_length_ratio</th>\n      <th>age_size_symmetry_index</th>\n      <th>target_effnetv1b0</th>\n      <th>target_eva02</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ISIC_0015657</td>\n      <td>IP_6074337</td>\n      <td>45.0</td>\n      <td>male</td>\n      <td>posterior torso</td>\n      <td>2.70</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>22.80433</td>\n      <td>20.007270</td>\n      <td>...</td>\n      <td>0.394561</td>\n      <td>3.773564e-04</td>\n      <td>0.146115</td>\n      <td>5860.433195</td>\n      <td>10.272290</td>\n      <td>0.306417</td>\n      <td>1.350141</td>\n      <td>58.239664</td>\n      <td>0.990183</td>\n      <td>0.035649</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ISIC_0015729</td>\n      <td>IP_1664139</td>\n      <td>35.0</td>\n      <td>female</td>\n      <td>lower extremity</td>\n      <td>2.52</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>16.64867</td>\n      <td>9.657964</td>\n      <td>...</td>\n      <td>0.414243</td>\n      <td>6.021040e-03</td>\n      <td>0.000000</td>\n      <td>1356.386566</td>\n      <td>19.020889</td>\n      <td>0.000000</td>\n      <td>1.228257</td>\n      <td>37.593443</td>\n      <td>0.040407</td>\n      <td>0.036221</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ISIC_0015740</td>\n      <td>IP_7142616</td>\n      <td>65.0</td>\n      <td>male</td>\n      <td>posterior torso</td>\n      <td>3.16</td>\n      <td>TBP tile: close-up</td>\n      <td>3D: XP</td>\n      <td>24.25384</td>\n      <td>19.937380</td>\n      <td>...</td>\n      <td>0.580136</td>\n      <td>1.238809e-14</td>\n      <td>0.084468</td>\n      <td>4439.279492</td>\n      <td>11.935090</td>\n      <td>0.224800</td>\n      <td>1.244559</td>\n      <td>75.191066</td>\n      <td>0.058077</td>\n      <td>0.026196</td>\n    </tr>\n  </tbody>\n</table>\n<p>3 rows × 83 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"X_cat = category_encoder.transform(df_test[cat_cols])\nfor c, cat_col in enumerate(cat_cols):\n    df_test[cat_col] = X_cat[:, c]","metadata":{"execution":{"iopub.status.busy":"2024-07-24T23:48:12.412515Z","iopub.execute_input":"2024-07-24T23:48:12.412887Z","iopub.status.idle":"2024-07-24T23:48:12.422802Z","shell.execute_reply.started":"2024-07-24T23:48:12.412858Z","shell.execute_reply":"2024-07-24T23:48:12.421722Z"},"trusted":true},"execution_count":28,"outputs":[]},{"cell_type":"code","source":"cat_cols","metadata":{"execution":{"iopub.status.busy":"2024-07-24T23:48:44.202158Z","iopub.execute_input":"2024-07-24T23:48:44.203054Z","iopub.status.idle":"2024-07-24T23:48:44.208640Z","shell.execute_reply.started":"2024-07-24T23:48:44.203019Z","shell.execute_reply":"2024-07-24T23:48:44.207763Z"},"trusted":true},"execution_count":30,"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"['sex',\n 'tbp_tile_type',\n 'tbp_lv_location',\n 'tbp_lv_location_simple',\n 'combined_anatomical_site']"},"metadata":{}}]},{"cell_type":"code","source":"df_test","metadata":{"execution":{"iopub.status.busy":"2024-07-24T23:48:54.702603Z","iopub.execute_input":"2024-07-24T23:48:54.703287Z","iopub.status.idle":"2024-07-24T23:48:54.729671Z","shell.execute_reply.started":"2024-07-24T23:48:54.703254Z","shell.execute_reply":"2024-07-24T23:48:54.728715Z"},"trusted":true},"execution_count":31,"outputs":[{"execution_count":31,"output_type":"execute_result","data":{"text/plain":"        isic_id  patient_id  age_approx  sex anatom_site_general  \\\n0  ISIC_0015657  IP_6074337        45.0    1     posterior torso   \n1  ISIC_0015729  IP_1664139        35.0    0     lower extremity   \n2  ISIC_0015740  IP_7142616        65.0    1     posterior torso   \n\n   clin_size_long_diam_mm          image_type  tbp_tile_type  tbp_lv_A  \\\n0                    2.70  TBP tile: close-up              0  22.80433   \n1                    2.52  TBP tile: close-up              0  16.64867   \n2                    3.16  TBP tile: close-up              0  24.25384   \n\n   tbp_lv_Aext  ...  size_color_contrast_ratio  \\\n0    20.007270  ...                   0.394561   \n1     9.657964  ...                   0.414243   \n2    19.937380  ...                   0.580136   \n\n   age_normalized_nevi_confidence  color_asymmetry_index  \\\n0                    3.773564e-04               0.146115   \n1                    6.021040e-03               0.000000   \n2                    1.238809e-14               0.084468   \n\n   3d_volume_approximation  color_range  shape_color_consistency  \\\n0              5860.433195    10.272290                 0.306417   \n1              1356.386566    19.020889                 0.000000   \n2              4439.279492    11.935090                 0.224800   \n\n   border_length_ratio  age_size_symmetry_index  target_effnetv1b0  \\\n0             1.350141                58.239664           0.990183   \n1             1.228257                37.593443           0.040407   \n2             1.244559                75.191066           0.058077   \n\n   target_eva02  \n0      0.035649  \n1      0.036221  \n2      0.026196  \n\n[3 rows x 83 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>isic_id</th>\n      <th>patient_id</th>\n      <th>age_approx</th>\n      <th>sex</th>\n      <th>anatom_site_general</th>\n      <th>clin_size_long_diam_mm</th>\n      <th>image_type</th>\n      <th>tbp_tile_type</th>\n      <th>tbp_lv_A</th>\n      <th>tbp_lv_Aext</th>\n      <th>...</th>\n      <th>size_color_contrast_ratio</th>\n      <th>age_normalized_nevi_confidence</th>\n      <th>color_asymmetry_index</th>\n      <th>3d_volume_approximation</th>\n      <th>color_range</th>\n      <th>shape_color_consistency</th>\n      <th>border_length_ratio</th>\n      <th>age_size_symmetry_index</th>\n      <th>target_effnetv1b0</th>\n      <th>target_eva02</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ISIC_0015657</td>\n      <td>IP_6074337</td>\n      <td>45.0</td>\n      <td>1</td>\n      <td>posterior torso</td>\n      <td>2.70</td>\n      <td>TBP tile: close-up</td>\n      <td>0</td>\n      <td>22.80433</td>\n      <td>20.007270</td>\n      <td>...</td>\n      <td>0.394561</td>\n      <td>3.773564e-04</td>\n      <td>0.146115</td>\n      <td>5860.433195</td>\n      <td>10.272290</td>\n      <td>0.306417</td>\n      <td>1.350141</td>\n      <td>58.239664</td>\n      <td>0.990183</td>\n      <td>0.035649</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ISIC_0015729</td>\n      <td>IP_1664139</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>lower extremity</td>\n      <td>2.52</td>\n      <td>TBP tile: close-up</td>\n      <td>0</td>\n      <td>16.64867</td>\n      <td>9.657964</td>\n      <td>...</td>\n      <td>0.414243</td>\n      <td>6.021040e-03</td>\n      <td>0.000000</td>\n      <td>1356.386566</td>\n      <td>19.020889</td>\n      <td>0.000000</td>\n      <td>1.228257</td>\n      <td>37.593443</td>\n      <td>0.040407</td>\n      <td>0.036221</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ISIC_0015740</td>\n      <td>IP_7142616</td>\n      <td>65.0</td>\n      <td>1</td>\n      <td>posterior torso</td>\n      <td>3.16</td>\n      <td>TBP tile: close-up</td>\n      <td>0</td>\n      <td>24.25384</td>\n      <td>19.937380</td>\n      <td>...</td>\n      <td>0.580136</td>\n      <td>1.238809e-14</td>\n      <td>0.084468</td>\n      <td>4439.279492</td>\n      <td>11.935090</td>\n      <td>0.224800</td>\n      <td>1.244559</td>\n      <td>75.191066</td>\n      <td>0.058077</td>\n      <td>0.026196</td>\n    </tr>\n  </tbody>\n</table>\n<p>3 rows × 83 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# inference\nlgb_preds = np.mean([model.predict_proba(df_test[train_cols])[:, 1] for model in lgb_models], 0)\ncb_preds = np.mean([model.predict_proba(df_test[train_cols])[:, 1] for model in cb_models], 0)\npreds = lgb_preds * 0.5 + cb_preds * 0.5","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_sub = pd.read_csv(\"/kaggle/input/isic-2024-challenge/sample_submission.csv\")\ndf_sub[\"target\"] = preds\ndf_sub","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_sub.to_csv(\"submission.csv\", index=False)","metadata":{"trusted":true},"execution_count":null,"outputs":[]}]}