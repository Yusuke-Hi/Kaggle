{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":63056,"databundleVersionId":9094797,"sourceType":"competition"},{"sourceId":8941473,"sourceType":"datasetVersion","datasetId":5380123}],"dockerImageVersionId":30747,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Import","metadata":{}},{"cell_type":"code","source":"import os\nimport gc\nimport cv2\nimport math\nimport copy\nimport time\nimport random\nimport glob\nfrom matplotlib import pyplot as plt\n\nimport h5py\nfrom PIL import Image\nfrom io import BytesIO\n\nimport numpy as np\nimport pandas as pd\n\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\nimport torch.nn.functional as F\nfrom torch.optim import lr_scheduler\nfrom torch.utils.data import Dataset, DataLoader\nfrom torch.cuda import amp\nimport torchvision\n\nimport joblib\nfrom tqdm import tqdm\nfrom collections import defaultdict\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import StratifiedKFold\n\nimport timm\n\nimport albumentations as A\nfrom albumentations.pytorch import ToTensorV2\n\nfrom colorama import Fore, Back, Style\nb_ = Fore.BLUE\nsr_ = Style.RESET_ALL\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nos.environ[\"CUDA_LAUNCH_BLOCKING\"] = \"1\"","metadata":{"execution":{"iopub.status.busy":"2024-07-13T03:30:21.186934Z","iopub.execute_input":"2024-07-13T03:30:21.187490Z","iopub.status.idle":"2024-07-13T03:30:30.024470Z","shell.execute_reply.started":"2024-07-13T03:30:21.187457Z","shell.execute_reply":"2024-07-13T03:30:30.023645Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"CONFIG = dict(\n    seed = 42,\n    img_size = 384,\n    model_name = \"tf_efficientnet_b0_ns\",\n    valid_batch_size = 32,\n    device = torch.device(\"cuda:0\" if torch.cuda.is_available() else \"cpu\")\n)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T03:30:30.025940Z","iopub.execute_input":"2024-07-13T03:30:30.026447Z","iopub.status.idle":"2024-07-13T03:30:30.069517Z","shell.execute_reply.started":"2024-07-13T03:30:30.026420Z","shell.execute_reply":"2024-07-13T03:30:30.068452Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def set_seed(seed=42):\n    np.random.seed(seed)\n    torch.manual_seed(seed)\n    torch.cuda.manual_seed(seed)\n    torch.backends.cudnn.deterministic = True\n    torch.backends.cudnn.benchmark = False\n    \n    os.environ[\"PYTHONHASHSEED\"] = str(seed)\n    \nset_seed(CONFIG[\"seed\"])","metadata":{"execution":{"iopub.status.busy":"2024-07-13T03:30:30.071176Z","iopub.execute_input":"2024-07-13T03:30:30.071766Z","iopub.status.idle":"2024-07-13T03:30:30.093070Z","shell.execute_reply.started":"2024-07-13T03:30:30.071729Z","shell.execute_reply":"2024-07-13T03:30:30.092280Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"ROOT_DIR = \"/kaggle/input/isic-2024-challenge\"\nTEST_CSV = f\"{ROOT_DIR}/test-metadata.csv\"\nTEST_HDF = f\"{ROOT_DIR}/test-image.hdf5\"\nSAMPLE = f\"{ROOT_DIR}/sample_submission.csv\"\n\nBEST_WEIGHT = \"/kaggle/input/auroc0-5180-loss0-3385-epoch49-bin/AUROC0.5180_Loss0.3385_epoch49.bin\"","metadata":{"execution":{"iopub.status.busy":"2024-07-13T03:30:30.095528Z","iopub.execute_input":"2024-07-13T03:30:30.096214Z","iopub.status.idle":"2024-07-13T03:30:30.100964Z","shell.execute_reply.started":"2024-07-13T03:30:30.096187Z","shell.execute_reply":"2024-07-13T03:30:30.100021Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"path = \"/kaggle/input\"\ncontents = os.listdir(path)\nfor item in contents:\n    print(item)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T03:30:30.102008Z","iopub.execute_input":"2024-07-13T03:30:30.102295Z","iopub.status.idle":"2024-07-13T03:30:30.113186Z","shell.execute_reply.started":"2024-07-13T03:30:30.102270Z","shell.execute_reply":"2024-07-13T03:30:30.112290Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Read Data","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv(TEST_CSV)\ndf[\"target\"] = 0\ndf","metadata":{"execution":{"iopub.status.busy":"2024-07-13T03:30:30.114452Z","iopub.execute_input":"2024-07-13T03:30:30.115132Z","iopub.status.idle":"2024-07-13T03:30:30.173904Z","shell.execute_reply.started":"2024-07-13T03:30:30.115099Z","shell.execute_reply":"2024-07-13T03:30:30.173003Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_sub = pd.read_csv(SAMPLE)\ndf_sub","metadata":{"execution":{"iopub.status.busy":"2024-07-13T03:30:30.175118Z","iopub.execute_input":"2024-07-13T03:30:30.175484Z","iopub.status.idle":"2024-07-13T03:30:30.206655Z","shell.execute_reply.started":"2024-07-13T03:30:30.175450Z","shell.execute_reply":"2024-07-13T03:30:30.205657Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Dataset Class","metadata":{}},{"cell_type":"code","source":"class ISICDataset(Dataset):\n    def __init__(self, df, file_hdf, transforms=None):\n        self.df = df\n        self.fp_hdf = h5py.File(file_hdf, mode=\"r\")\n        self.isic_ids = df[\"isic_id\"].values\n        self.targets = df[\"target\"].values \n        self.transforms = transforms \n        \n    def __len__(self):\n        return len(self.isic_ids)\n    \n    def __getitem__(self, index):\n        isic_id = self.isic_ids[index]\n        img = np.array(Image.open(BytesIO(self.fp_hdf[isic_id][()])))\n        target = self.targets[index]\n        \n        if self.transforms:\n            img = self.transforms(image=img)[\"image\"]\n            \n        return {\n            \"image\":img,\n            \"target\":target,\n        }","metadata":{"execution":{"iopub.status.busy":"2024-07-13T03:30:30.207825Z","iopub.execute_input":"2024-07-13T03:30:30.208146Z","iopub.status.idle":"2024-07-13T03:30:30.216749Z","shell.execute_reply.started":"2024-07-13T03:30:30.208118Z","shell.execute_reply":"2024-07-13T03:30:30.215637Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Augmentations","metadata":{}},{"cell_type":"code","source":"data_transforms = {\n    \"valid\" : A.Compose([\n        A.Resize(CONFIG[\"img_size\"], CONFIG[\"img_size\"]),\n        A.Normalize(\n        mean=[0.485, 0.456, 0.406],\n        std=[0.229, 0.224, 0.225],\n        max_pixel_value=255.0,\n        p=1.0),\n    \n    ToTensorV2()],\n    p=1.)\n}","metadata":{"execution":{"iopub.status.busy":"2024-07-13T03:30:30.217951Z","iopub.execute_input":"2024-07-13T03:30:30.218261Z","iopub.status.idle":"2024-07-13T03:30:30.228508Z","shell.execute_reply.started":"2024-07-13T03:30:30.218214Z","shell.execute_reply":"2024-07-13T03:30:30.227611Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# GeM Pooling","metadata":{}},{"cell_type":"code","source":"torch.ones(2)*3","metadata":{"execution":{"iopub.status.busy":"2024-07-13T03:30:30.231877Z","iopub.execute_input":"2024-07-13T03:30:30.232128Z","iopub.status.idle":"2024-07-13T03:30:30.326903Z","shell.execute_reply.started":"2024-07-13T03:30:30.232107Z","shell.execute_reply":"2024-07-13T03:30:30.326016Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"class GeM(nn.Module):\n    def __init__(self, p=3, eps=1e-6):\n        super(GeM, self).__init__()\n        self.p = nn.Parameter(torch.ones(1)*p)\n        self.eps = eps\n        \n    def forward(self, x):\n        return self.gem(x, p=self.p, eps=self.eps)\n    \n    def gem(self, x, p=3, eps=1e-6):\n        return F.avg_pool2d(x.clamp(min=eps).pow(p), (x.size(-2), x.size(-1))).pow(1./p)\n    \n    def __repr__(self):\n        return self.__class__.__name__ + \\\n                \"(\" + \"p=\" + \"{:4f}\".format(self.p.data.tolist()[0]) + \\\n                \", \" + \"eps=\" + str(self.eps) + \")\"","metadata":{"execution":{"iopub.status.busy":"2024-07-13T03:30:30.327880Z","iopub.execute_input":"2024-07-13T03:30:30.328128Z","iopub.status.idle":"2024-07-13T03:30:30.336227Z","shell.execute_reply.started":"2024-07-13T03:30:30.328106Z","shell.execute_reply":"2024-07-13T03:30:30.335261Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Create Model","metadata":{}},{"cell_type":"code","source":"class ISICModel(nn.Module):\n    def __init__(self, model_name, num_classes=1, pretrained=True, checkpoint_path=None):\n        super(ISICModel, self).__init__()\n        self.model = timm.create_model(model_name, pretrained=pretrained, checkpoint_path=checkpoint_path)\n        \n        in_features = self.model.classifier.in_features\n        self.model.classifier = nn.Identity()\n        self.model.global_pool = nn.Identity()\n        self.pooling = GeM()\n        self.linear = nn.Linear(in_features, num_classes)\n        self.sigmoid = nn.Sigmoid()\n        \n    def forward(self, images):\n        features = self.model(images)\n        pooled_features = self.pooling(features).flatten(1)\n        output = self.sigmoid(self.linear(pooled_features))\n        return output\n    \nmodel = ISICModel(CONFIG[\"model_name\"], pretrained=False)\nmodel.load_state_dict(torch.load(BEST_WEIGHT))\nmodel.to(CONFIG[\"device\"])","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2024-07-13T03:30:30.337447Z","iopub.execute_input":"2024-07-13T03:30:30.337729Z","iopub.status.idle":"2024-07-13T03:30:31.047012Z","shell.execute_reply.started":"2024-07-13T03:30:30.337705Z","shell.execute_reply":"2024-07-13T03:30:31.046103Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Prepare Dataloaders","metadata":{}},{"cell_type":"code","source":"test_dataset = ISICDataset(df, TEST_HDF, transforms=data_transforms[\"valid\"])\ntest_loader = DataLoader(test_dataset, batch_size=CONFIG[\"valid_batch_size\"])","metadata":{"execution":{"iopub.status.busy":"2024-07-13T03:30:31.048273Z","iopub.execute_input":"2024-07-13T03:30:31.048627Z","iopub.status.idle":"2024-07-13T03:30:31.064339Z","shell.execute_reply.started":"2024-07-13T03:30:31.048595Z","shell.execute_reply":"2024-07-13T03:30:31.063290Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Start Inference","metadata":{}},{"cell_type":"code","source":"preds = []\nwith torch.no_grad():\n    bar = tqdm(enumerate(test_loader), total=len(test_loader))\n    for step, data in bar:\n        images = data[\"image\"].to(CONFIG[\"device\"], dtype=torch.float)\n        batch_size = images.size(0)\n        outputs = model(images)\n        preds.append(outputs.detach().cpu().numpy())\n        \npreds = np.concatenate(preds).flatten()","metadata":{"execution":{"iopub.status.busy":"2024-07-13T03:30:31.065514Z","iopub.execute_input":"2024-07-13T03:30:31.065797Z","iopub.status.idle":"2024-07-13T03:30:31.955338Z","shell.execute_reply.started":"2024-07-13T03:30:31.065773Z","shell.execute_reply":"2024-07-13T03:30:31.954411Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_sub[\"target\"] = preds\ndf_sub.to_csv(\"submission.csv\", index=False)","metadata":{"execution":{"iopub.status.busy":"2024-07-13T03:30:31.956579Z","iopub.execute_input":"2024-07-13T03:30:31.956932Z","iopub.status.idle":"2024-07-13T03:30:31.964648Z","shell.execute_reply.started":"2024-07-13T03:30:31.956900Z","shell.execute_reply":"2024-07-13T03:30:31.963770Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_sub","metadata":{"execution":{"iopub.status.busy":"2024-07-13T03:30:31.965928Z","iopub.execute_input":"2024-07-13T03:30:31.966612Z","iopub.status.idle":"2024-07-13T03:30:31.977625Z","shell.execute_reply.started":"2024-07-13T03:30:31.966579Z","shell.execute_reply":"2024-07-13T03:30:31.976784Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}